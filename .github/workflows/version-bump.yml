name: Version Management

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      commit_message:
        description: 'Commit message for version bump'
        required: false
        default: 'Bump version'

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Get current version
      id: get_version
      run: |
        CURRENT_VERSION=$(grep "mod_version" gradle.properties | cut -d'=' -f2)
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"

    - name: Calculate new version
      id: calc_version
      run: |
        CURRENT="${{ steps.get_version.outputs.current_version }}"
        
        # Parse version (assuming format: MAJOR.MINOR.PATCH)
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        
        # Bump version based on input
        case "${{ github.event.inputs.version_bump }}" in
          "major")
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          "minor")
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          "patch")
            PATCH=$((PATCH + 1))
            ;;
        esac
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"

    - name: Update version in gradle.properties
      run: |
        sed -i "s/mod_version=.*/mod_version=${{ steps.calc_version.outputs.new_version }}/" gradle.properties
        echo "Updated gradle.properties with version: ${{ steps.calc_version.outputs.new_version }}"

    - name: Update CHANGELOG.md
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
          echo "" >> CHANGELOG.md
        fi
        
        # Create temp file with new entry
        cat > temp_changelog.md << EOF
        # Changelog
        
        ## [${{ steps.calc_version.outputs.new_version }}] - $(date +%Y-%m-%d)
        
        ### Added
        - 
        
        ### Changed
        - 
        
        ### Fixed
        - 
        
        EOF
        
        # Append existing changelog (skip the first "# Changelog" line)
        tail -n +2 CHANGELOG.md >> temp_changelog.md
        mv temp_changelog.md CHANGELOG.md

    - name: Commit and push changes
      run: |
        git add gradle.properties CHANGELOG.md
        git commit -m "${{ github.event.inputs.commit_message || 'Bump version' }} to ${{ steps.calc_version.outputs.new_version }}"
        git push origin main

    - name: Create and push tag
      run: |
        git tag -a "v${{ steps.calc_version.outputs.new_version }}" -m "Release version ${{ steps.calc_version.outputs.new_version }}"
        git push origin "v${{ steps.calc_version.outputs.new_version }}"

    - name: Output summary
      run: |
        echo "## Version Bump Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Previous version:** ${{ steps.get_version.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **New version:** ${{ steps.calc_version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Bump type:** ${{ github.event.inputs.version_bump }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag created:** v${{ steps.calc_version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "You can now manually trigger the build workflow to create a release." >> $GITHUB_STEP_SUMMARY
